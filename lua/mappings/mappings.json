[

    {
        "title": "Comments",
        "base_lhs": "<Leader>c",
        "commands": [
            {
                "title": "Todo",
                "base_lhs": "t",
                "commands": [
                    {
                        "lhs": "l",
                        "rhs": "<cmd>:TodoTelescope<CR>",
                        "desc": "list"
                    }
                ]
            },
            {
                "title": "Comments",
                "base_lhs": "c",
                "commands": [
                    {
                        "lhs": "l",
                        "rhs": "<cmd>lua require('Comment.api').toggle.linewise.current()<CR>",
                        "desc": "Comment/uncomment the current line"
                    },
                    {
                        "lhs": "v",
                        "rhs": "<cmd>lua require('Comment.api').toggle.linewise(vim.fn.visualmode())<CR>",
                        "desc": "Comment/uncomment the selected lines"
                    }
                ]
            }
        ]
    },
    {
        "title": "Session Management",
        "base_lhs": "<Leader>s",
        "commands": [
            {
                "lhs": "s",
                "rhs": "<cmd>lua require('config.sessions').save_session()<CR>",
                "desc": "Save session with a name"
            },
            {
                "lhs": "l",
                "rhs": "<cmd>:Telescope persisted<CR>",
                "desc": "Load sessions"
            },
            {
                "lhs": "o",
                "rhs": "<cmd>lua require('config.sessions').overwrite_current_session()<CR>",
                "desc": "Overwrite the current session"
            },
            {
                "lhs": "d",
                "rhs": "<cmd>lua require('config.sessions').list_and_delete_sessions()<CR>",
                "desc": "Delete a session"
            }
        ]
    },
    {
        "title": "Quick Quit Commands",
        "base_lhs": "<Leader>q",
        "commands": [
            {
                "lhs": "q",
                "rhs": "<cmd>q!<CR>",
                "desc": "Force quit current window"
            },
            {
                "lhs": "c",
                "rhs": "<cmd>qa<CR>",
                "desc": "Close nvim"
            },
            {
                "lhs": "a",
                "rhs": "<cmd>qa!<CR>",
                "desc": "Force quit all windows"
            },
            {
                "lhs": "m",
                "rhs": "<cmd>stop<CR>",
                "desc": "Minimize Neovim"
            },
            {
                "title": "Write",
                "base_lhs": "w",
                "commands": [
                    {
                        "lhs": "w",
                        "rhs": "<cmd>w!<CR>",
                        "desc": "Force quit all windows"
                    },
                    {
                        "lhs": "q",
                        "rhs": "<cmd>wq!<CR>",
                        "desc": "Force quit all windows"
                    }
                ]
            }
        ]
    },
    {
        "title": "Lazy",
        "base_lhs": "<leader>z",
        "commands": [
            {
                "lhs": "s",
                "rhs": "<cmd>Lazy sync<CR>",
                "desc": "Sync"
            },
            {
                "lhs": "u",
                "rhs": "<cmd>Lazy update<CR>",
                "desc": "Update"
            }
        ]
    },
    {
        "title": "Git version",
        "base_lhs": "<leader>v",
        "commands": [
            {
                "lhs": "b",
                "rhs": "<cmd>:GitBlameToggle<CR>",
                "desc": "Toogle blamme"
            },
            {
                "title": "History",
                "base_lhs": "h",
                "commands": [
                    {
                        "lhs": "f",
                        "rhs": "<cmd>lua require('telescope').extensions.git_file_history.git_file_history()<CR>",
                        "desc": "Show file history"
                    }
                ]
            }
        ]
    },
    {
        "title": "UFO Folding",
        "base_lhs": "<leader>u",
        "commands": [
            {
                "lhs": "o",
                "rhs": "<cmd>lua require('ufo').goPreviousStartFold:()<CR>",
                "desc": "Open all folds"
            },
            {
                "lhs": "c",
                "rhs": "<cmd>lua require('ufo').closeAllFolds()<CR>",
                "desc": "Close all folds"
            },
            {
                "lhs": "j",
                "rhs": "<cmd>lua require('ufo').openFoldsExceptKinds()<CR>",
                "desc": "Reduce fold level"
            },
            {
                "lhs": "k",
                "rhs": "<cmd>lua require('ufo').closeFoldsWith()<CR>",
                "desc": "Increase fold level"
            },
            {
                "lhs": "p",
                "rhs": "<cmd>lua require('ufo').peekFoldedLinesUnderCursor()<CR>",
                "desc": "Preview folded code"
            }
        ]
    },
    {
        "title": "Bookmarks Mappings",
        "base_lhs": "",
        "commands": [
            {
                "lhs": "<C-;>",
                "rhs": "<cmd>lua require('config.bookmarks').next_global_bookmark()<CR>",
                "desc": "Jump to next global bookmark"
            },
            {
                "lhs": "<C-g>",
                "rhs": "<cmd>lua require('config.bookmarks').prev_global_bookmark()<CR>",
                "desc": "Jump to previous global bookmark"
            },
            {
                "title": "Bookmarks Mappings",
                "base_lhs": "<leader>b",
                "commands": [
                    {
                        "lhs": "t",
                        "rhs": "<cmd>lua require('bookmarks').bookmark_toggle()<CR>",
                        "desc": "Toggle bookmarks"
                    },
                    {
                        "lhs": "a",
                        "rhs": "<cmd>lua require('bookmarks').bookmark_ann()<CR>",
                        "desc": "Add a bookmark"
                    },
                    {
                        "lhs": "n",
                        "rhs": "<cmd>lua require('config.bookmarks').next_global_bookmark()<CR>",
                        "desc": "Jump next"
                    },
                    {
                        "lhs": "p",
                        "rhs": "<cmd>lua require('config.bookmarks').prev_global_bookmark()<CR>",
                        "desc": "Jump prev"
                    },
                    {
                        "lhs": "C",
                        "rhs": "<cmd>lua require('bookmarks').bookmark_clear_all()<CR>|<cmd>lua require('bookmarks').bookmark_clean()<CR>",
                        "desc": "Clear all"
                    },
                    {
                        "lhs": "s",
                        "rhs": "<cmd>lua require('telescope').extensions.bookmarks.list()<CR>",
                        "desc": "Show marked files in quickfix window"
                    }
                ]
            }
        ]
    },
    {
        "title": "NvimTree Mappings",
        "buffer_specific": true,
        "base_lhs": "",
        "commands": [
            {
                "lhs": "<CR>",
                "rhs": "<cmd>lua require('nvim-tree.api').node.open.edit()<CR>",
                "desc": "Abrir nodo"
            },
            {
                "lhs": "<C-e>",
                "rhs": "<cmd>lua require('nvim-tree.api').node.navigate.parent_close()<CR>",
                "desc": "Colapsar carpeta del archivo"
            }
        ]
    },
    {
        "title": "Panels Commands",
        "base_lhs": "<Leader>p",
        "commands": [
            {
                "title": "Terminal Commands",
                "base_lhs": "t",
                "commands": [
                    {
                        "lhs": "t",
                        "rhs": "<cmd>lua require('config.terminal').toggle()<CR>",
                        "desc": "Toggle"
                    },
                    {
                        "lhs": "n",
                        "rhs": "<cmd>lua require('config.terminal').new_terminal()<CR>",
                        "desc": "New"
                    }
                ]
            },
            {
                "title": "Panel",
                "base_lhs": "p",
                "commands": [
                    {
                        "title": "Split",
                        "base_lhs": "s",
                        "commands": [
                            {
                                "lhs": "v",
                                "rhs": "<cmd>vsplit | edit %<CR>",
                                "desc": "Split window vertically"
                            },
                            {
                                "lhs": "h",
                                "rhs": "<cmd>split | edit %<CR>",
                                "desc": "Split window horizontally"
                            }
                        ]
                    }
                ]
            },
            {
                "lhs": "s",
                "rhs": "<cmd>NvimTreeToggle<CR>",
                "desc": "Toggle Tree View"
            }
        ]
    },
    {
        "title": "Find commands",
        "base_lhs": "<Leader>f",
        "commands": [
            {
                "lhs": "f",
                "rhs": "<cmd>Telescope find_files<CR>",
                "desc": "Find a file"
            },
            {
                "lhs": "g",
                "rhs": "<cmd>Telescope live_grep<CR>",
                "desc": "Search text in all files"
            },
            {
                "title": "Find Code",
                "base_lhs": "c",
                "commands": [
                    {
                        "lhs": "f",
                        "rhs": "<cmd>Telescope lsp_document_symbols<CR>",
                        "desc": "List and navigate function definitions"
                    }
                ]
            },
            {
                "title": "Find commands",
                "base_lhs": "r",
                "commands": [
                    {
                        "lhs": "f",
                        "rhs": "<cmd>lua vim.lsp.buf.references()<CR>",
                        "desc": "Find references"
                    },
                    {
                        "lhs": "n",
                        "rhs": "<cmd>lua require('illuminate').goto_next_reference(false)<CR>",
                        "desc": "Next reference"
                    },
                    {
                        "lhs": "p",
                        "rhs": "<cmd>lua require('illuminate').goto_prev_reference(false)<CR>",
                        "desc": "Previous reference"
                    },
                    {
                        "title": "Symbols",
                        "base_lhs": "s",
                        "commands": [
                            {
                                "lhs": "f",
                                "rhs": "<cmd>lua require('telescope.builtin').lsp_document_symbols({ symbols = { 'function' } })<CR>",
                                "desc": "Find FUNCTIONS"
                            },
                            {
                                "lhs": "s",
                                "rhs": "<cmd>lua require('telescope.builtin').lsp_document_symbols({ symbols = { 'struct' } })<CR>",
                                "desc": "Find STRUCTS"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "title": "Window navigation",
        "commands": [
            {
                "lhs": "<C-h>",
                "rhs": "<C-w>h",
                "desc": "Move to the left panel"
            },
            {
                "lhs": "<C-l>",
                "rhs": "<C-w>l",
                "desc": "Move to the right panel"
            },
            {
                "lhs": "<C-j>",
                "rhs": "<C-w>j",
                "desc": "Move to the panel below"
            },
            {
                "lhs": "<C-k>",
                "rhs": "<C-w>k",
                "desc": "Move to the panel above"
            }
        ]
    },
    {
        "title": "Debugger commands",
        "base_lhs": "<Leader>d",
        "commands": [
            {
                "lhs": "l",
                "rhs": "<cmd>lua require'dap'.step_into()<CR>",
                "desc": "Debugger step into"
            },
            {
                "lhs": "j",
                "rhs": "<cmd>lua require'dap'.step_over()<CR>",
                "desc": "Debugger step over"
            },
            {
                "lhs": "k",
                "rhs": "<cmd>lua require'dap'.step_out()<CR>",
                "desc": "Debugger step out"
            },
            {
                "lhs": "c",
                "rhs": "<cmd>lua require'dap'.continue()<CR>",
                "desc": "Debugger continue"
            },
            {
                "lhs": "b",
                "rhs": "<cmd>lua require'dap'.toggle_breakpoint()<CR>",
                "desc": "Debugger toggle breakpoint"
            },
            {
                "lhs": "d",
                "rhs": "<cmd>lua require'dap'.set_breakpoint(vim.fn.input('Breakpoint condition: '))<CR>",
                "desc": "Debugger set conditional breakpoint"
            },
            {
                "lhs": "e",
                "rhs": "<cmd>lua require'dap'.terminate()<CR>",
                "desc": "Debugger reset"
            },
            {
                "lhs": "r",
                "rhs": "<cmd>lua require'dap'.run_last()<CR>",
                "desc": "Debugger run last"
            }
        ]
    },
    {
        "title": "LSP commands",
        "base_lhs": "<Leader>g",
        "commands": [
            {
                "lhs": "d",
                "rhs": "<cmd>lua vim.lsp.buf.definition()<CR>",
                "desc": "Go to definition"
            },
            {
                "lhs": "i",
                "rhs": "<cmd>lua vim.lsp.buf.implementation()<CR>",
                "desc": "Go to implementation"
            },
            {
                "lhs": "t",
                "rhs": "<cmd>lua vim.lsp.buf.type_definition()<CR>",
                "desc": "Go to type definition"
            }
        ]
    },
    {
        "title": "Refactor commands",
        "base_lhs": "<Leader>r",
        "commands": [
            {
                "lhs": "n",
                "rhs": "<cmd>vim.lsp.buf.rename()<CR>",
                "desc": "LSP Rename"
            },
            {
                "lhs": "a",
                "rhs": "<cmd>vim.lsp.buf.code_action()<CR>",
                "desc": "Code actions"
            },
            {
                "lhs": "g",
                "rhs": "<cmd>vim.lsp.buf.code_action_group()<CR>",
                "desc": "Code action group"
            }
        ]
    }
]